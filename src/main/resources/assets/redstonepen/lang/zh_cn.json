{
  "language": "简体中文",
  "language.code": "zh_cn",
  "language.region": "中国大陆",
  "itemGroup.tabredstonepen": "红石笔",
  "redstonepen.tooltip.hint.extended": "§6[§9Shift§r 展开§6]§r",
  "redstonepen.tooltip.hint.help": "§6[§9Ctrl-Shift§r 帮助§6]§r",
  "block.redstonepen.basic_button": "Basic Button",
  "block.redstonepen.basic_button.help": "Basically fits everywhere - hopefully.",
  "block.redstonepen.basic_lever": "Basic Lever",
  "block.redstonepen.basic_lever.help": "Basically fits everywhere - hopefully.",
  "block.redstonepen.basic_pulse_button": "Basic Pulse Button",
  "block.redstonepen.basic_pulse_button.help": "Emits a Redstone signal for one tick.",
  "block.redstonepen.bistable_relay": "双稳态红石中继",
  "block.redstonepen.bistable_relay.help": "中继来自后方和侧方的输入信号，以 15 级能量向前方输出。当检测到信号上升沿时切换开关（通电脉冲控制输出）。",
  "block.redstonepen.bridge_relay": "红石中继桥",
  "block.redstonepen.bridge_relay.help": "中继来自后方的输入信号，以 15 级能量向前方输出。同时从左到右透传普通红石信号。",
  "block.redstonepen.control_box": "红石逻辑控制器",
  "block.redstonepen.control_box.error.expected_assignment": "应为赋值",
  "block.redstonepen.control_box.error.invalid_character": "无效字符",
  "block.redstonepen.control_box.error.invalid_number_of_arguments": "函数参数数量不正确",
  "block.redstonepen.control_box.error.missing_closing_function_parenthesis": "应为函数闭合括号 ')'",
  "block.redstonepen.control_box.error.missing_closing_parenthesis": "应为闭合括号 ')'",
  "block.redstonepen.control_box.error.missing_function_arguments": "应为函数参数（包括括号）",
  "block.redstonepen.control_box.error.parse_error": "Parse error",
  "block.redstonepen.control_box.error.symbol_readonly": "符号或变量为只读",
  "block.redstonepen.control_box.error.unexpected_character": "不应出现的字符",
  "block.redstonepen.control_box.error.unknown_function": "未知函数",
  "block.redstonepen.control_box.help": "简易类 PLC 控制器",
  "block.redstonepen.control_box.help.1": "§n基础:§r§7 RLC 在所有方向上提供数字（开/关）与模拟（信号强度、\n§7比较器输出）红石信号输入输出。它提供六个端口：R、B、Y、G、U、D，\n§7分别对应红、蓝、黄、绿、上、下。\n§7你可以使用一系列数学表达式来编程。所有代码行会在同一游戏刻内执行\n§7（读输入 -> 计算 -> 写输出）。代码不区分大小写\n§7（\"R\" 与 \"r\" 含义相同）。你也可以设置自定义变量，变量值会保留到\n§7RLC 停止为止。解析错误会被标红（鼠标指向查看详情），并阻止程序运行。\n\n§7点击运行/停止按钮开始或停止程序。鼠标指向 RLC 符号查看内部变量值\n§7（仅运行时）。端口列表会显示当前信号值，以及端口是输入、输出还是\n§7未使用状态。复制/粘贴剪贴板按钮就不需要多说了 ;)",
  "block.redstonepen.control_box.help.10": "§n延伸:§r§7 控制器通常每 4 游戏刻计算一次，当输入端口从 ON 到 OFF\n§7或者从 OFF 到 ON 时，运行周期会被重新调度到尽可能接近的游戏刻。\n§7给 \"TICKRATE\" 变量赋值来在 1T 到 20T 之间调整基础刻速率。\n§7比较器输入不会触发调度。",
  "block.redstonepen.control_box.help.2": "§n表达式§r§7被写作赋值语句 \"结果=表达式项\"，例如\n§7\"R = G & B\"。每行代码都必须是这种形式。\n§7使用 \"#\" 符号表示从这里到行尾的内容都是注释。\n§7表达式项可以包含括号 \"(...)\"、端口、变量、运算符和函数。\n\n§7如果你为一个端口变量赋值（R、B、Y、G、U、D），则会自动设置此\n§7端口为输出，并会忽略此处输入信号的变化。如果你在表达式中使用\n§7端口变量（非输出），则会自动设置为输入。\n§7邻近方块的比较器输出需要通过 \".CO\" 后缀读取。例如\n§7\"Y = MAX( B.CO, R, g.co, MyVar )\"。\n§7即使为 CO 变量赋值，它们也无法作为 RLC 输出。",
  "block.redstonepen.control_box.help.3": "§n算术运算§r§7在 RLC 中只支持整数，意味着 \"A * 1.5\" 是无效的，\n§7并且除法会四舍五入到整数。支持的运算有：\n\n§7\"+\"、\"-\"、\"*\"、\"/\"、\"%\"（后者为取模除法运算）。\n\n§7变量可以赋值为任意正负 32 位整数值（远超过正常所需）。\n§7但端口值会被隐式地限制到有效红石信号值范围 0..15。\n§7Int32 值溢出会导致数值环绕，除零会产生 0 和一个通往虚无的奇点。",
  "block.redstonepen.control_box.help.4": "§n关系§r§7运算符提供数值比较：\n§7\n§7  \"==\"（等于）\"!=\"（不等于），\n§7  \">=\"（大于等于），\"<=\"（小于等于），\n§7  \">\"（大于），\"<\"（小于）。\n§7\n§7如果比较的结果为 \"false\"，则表达式的值为 0，如果为\n§7\"true\"，则表达式值为 15。因为这些值是数字，你可以直接\n§7将它们用于计算。例如 \"G=(R>11)/3\" 的结果为 5 或 0。\n§7但是，更好的做法是使用 IF 函数：\"G = IF( R>11, 5, 0 )\"。",
  "block.redstonepen.control_box.help.5": "§n逻辑§r§7运算符支持“红石布尔”值，本质上是整数。大于 0 的操作\n§7数被视为 \"true\"。逻辑运算结果为 \"false\" 时输出 0，为\n§7\"true\" 时输出 15。支持的运算符包括：\n§7\n§7 逻辑与：\"AND\"、\"&&\"、\"&\"\n§7 逻辑或：\"OR\"、\"||\"、\"|\"\n§7 逻辑异或：\"XOR\"、\"^\"\n§7 逻辑非：\"NOT\"、\"!\"\n§7\n§7经验法则：运算的输入行为类似红石灯，输出行为类似拉杆。\n§7致程序员：这里没有位运算符。",
  "block.redstonepen.control_box.help.6": "§n边沿检测§r§7意味着跟踪输入从断路 [0] 变为通路 [>0]（或者\n§7相反）的瞬间。\n§7上升沿触发器可以通过 \".RE\" 后缀检查，在输入从断路变为通路\n§7的那一游戏刻值为 15。\n§7下降沿触发器可以通过 \".FE\" 后缀检查，在输入从通路变为断路\n§7的那一游戏刻值为 15。\n§7例如：\n§7\n§7 C = C+IF(R.RE OR G.FE OR Y.CO.RE, 1, 0) # 用 C 计数\n§7 C = CNT1(G.RE, B.RE, 10) # 使用升降计数器 1\n§7\n§7注意：尽管 RLC 不一定每游戏刻都执行，输入端口的边沿检测仍然\n§7生效（即“中断”）。这相当于 PLC 中的 RTRIG 和 FTRIG。",
  "block.redstonepen.control_box.help.7": "§n时钟§r§7在 PLC 中是基于信号的。RLC 实现了其中最重要的三种：TON、\n§7TOF 和 TP：\n§7TON 为延迟通电。输入信号必须保持稳定为 ON 一段指定的时间，之后时钟\n§7才会输出 ON。任何 OFF 信号都会立刻重置时钟。TOF 类似但相反（延迟断\n§7电）。TP 在检测到输入信号的上升沿时会生成一次指定时间的脉冲。脉冲\n§7期间，任何信号变化都会被忽略。\n§7RLC 包含每种时钟类型各 4 个简化的实例：\n§7\n§7 A = TON3(输入表达式, 通电延迟刻数)\n§7 A = TOF2(输入表达式, 断电延迟刻数)\n§7 A = TP4(输入表达式, 脉冲刻数)\n§7 R = TON1( Y.CO<3, 30*20 ) # 漏斗库存低 30 秒后报警\n§7 R = TP1( Y.RE, 20 ) # 侦测器脉冲延长 1s",
  "block.redstonepen.control_box.help.8": "§n计数器§r§7用于记录事件发生的次数。RLC 拥有 4 个稳定的升降计数器\n§7CNT1..4，包含如下可选参数：\n§7\n§7N = CNTx(Iup)   # 如果 Iup>0 则向上计数\n§7N = CNTx(Iup, Idown)   # 如果 Idown>0 则倒数到 0\n§7N = CNTx(Iup, Idown, Max)   # 在 0..Max 之间计数\n§7N = CNTx(Iup, Idown, Min, Max)   # 在 Min..Max 之间计数\n§7N = CNTx(Iup, Idown, Min, Max, Reset)    # 重置为 Min\n§7\n§7N 记录新的计数器值。注意：为事件计数时应该使用信号边沿（例如 G.RE）\n§7作为输入。计数器不保证游戏刻时间精确（计时应该使用时钟）。",
  "block.redstonepen.control_box.help.9": "§n函数索引§r\n§7IF(X,A,B)   # 如果 X>0 则为 A 否则为 B\n§7INV(X)   # 反转红石信号：15-X，结果为 0..15\n§7MAX(A,B,...)、MIN(...)、MEAN(...)   # 最小值、最大值、平均值\n§7LIM(X)、LIM(X,B)、LIM(X,A,B)   # 限制值域到 0..15、0..B、A..B\n§7TIME()、CLOCK()    # 白昼时间、游戏时间\n§7RND()   # 0..15 之间的随机数\n§7\n§7§nRLC specific function blocks§r\n§7\n§7TIVx(T) # Interval, pulse every T ticks (TIV1/TIV2)",
  "block.redstonepen.control_box.tooltips.copyall": "复制代码到剪贴板",
  "block.redstonepen.control_box.tooltips.pasteall": "粘贴剪贴板中的代码",
  "block.redstonepen.control_box.tooltips.rcaplayer": "RCA 连接到玩家 %1$s",
  "block.redstonepen.control_box.tooltips.runstop": "运行/停止",
  "block.redstonepen.inverted_relay": "反转红石中继",
  "block.redstonepen.inverted_relay.help": "中继来自后方和侧方的输入信号，以 15 级能量向前方输出。输出能量会被反转（有信号时输出 0，否则输出 15）。断电延迟为 1 红石刻，通电无延迟。\n也接受来自红石线路的间接输入能量（连接到被红石信号充能的方块）。",
  "block.redstonepen.pulse_relay": "脉冲红石中继",
  "block.redstonepen.pulse_relay.help": "当检测到信号上升沿时，激活一次短脉冲输出（通电脉冲控制输出）。脉冲时长为 1 红石刻。",
  "block.redstonepen.relay": "红石中继",
  "block.redstonepen.relay.help": "中继来自后方和侧方的输入信号，以 15 级能量向前方输出。通电无延迟，断电延迟为 1 红石刻。\n也接受来自红石线路的间接输入能量（连接到被红石信号充能的方块）。",
  "block.redstonepen.track": "红石线路",
  "item.redstonepen.pen": "红石笔",
  "item.redstonepen.pen.help": "可填装的笔，用于在任何方向上绘制或擦除红石线路。这些线路通常§l不会§r为其经过的方块充能（点击线路中心放置/删除连接点才能使其充能）。潜行时看向方块查看当前的红石信号强度。在合成界面使用红石来填装。\n在同一个方块内，如果过多线路未处于连接状态，则可能会发生干扰断电，这种情况下需要重新布线。",
  "item.redstonepen.pen.tooltip.numstored": "已存储 %1$s 份红石",
  "item.redstonepen.pen.tooltip.rsfrominventory": "使用物品栏内的红石",
  "item.redstonepen.quill": "红石刷",
  "item.redstonepen.quill.help": "用于在任何方向上绘制或擦除红石线路。这些线路通常§l不会§r为其经过的方块充能（点击线路中心放置/删除连接点才能使其充能）。潜行时看向方块查看当前的红石信号强度。\n在同一个方块内，如果过多线路未处于连接状态，则可能会发生干扰断电，这种情况下需要重新布线。",
  "advancement.redstonepen.craft_redstonepen": "一笔勾画",
  "advancement.redstonepen.craft_redstonepen.desc": "合成红石笔",
  "redstonepen.overlay.comparator_compare": " 比较",
  "redstonepen.overlay.comparator_subtract": " 作差",
  "redstonepen.overlay.direct_power": "[%1$s]",
  "redstonepen.overlay.direct_power_at": "[%1$s] @ %2$s",
  "redstonepen.overlay.indirect_power": "(%1$s) @ %2$s",
  "redstonepen.overlay.repeater_delay": " %1$s 刻",
  "redstonepen.overlay.track_power": "<%1$s>",
  "redstonepen.overlay.wire_power": "<%1$s>"
}