{
  "language": "English",
  "language.code": "en_us",
  "language.region": "United States",
  "itemGroup.tabredstonepen": "Redstone Pen",
  "redstonepen.tooltip.hint.extended": "§6[§9shift§r More§6]§r",
  "redstonepen.tooltip.hint.help": "§6[§9ctrl-shift§r Help§6]§r",
  "block.redstonepen.bistable_relay": "Bi-Stable Redstone Relay",
  "block.redstonepen.bistable_relay.help": "Re-lays incoming signals from the back and the sides to the front with output power 15. Switches on and off when detecting a rising signal edge (off-to-on-pulse controlled).",
  "block.redstonepen.bridge_relay": "Bridging Redstone Relay",
  "block.redstonepen.bridge_relay.help": "Re-lays incoming signals from the back to the front with output power 15. Passes through a normal Redstone signal from left-to-right.",
  "block.redstonepen.control_box": "Redstone Logic Control",
  "block.redstonepen.control_box.error.expected_assignment": "Assignment expected",
  "block.redstonepen.control_box.error.invalid_character": "Invalid character",
  "block.redstonepen.control_box.error.invalid_number_of_arguments": "Invalid number of function arguments",
  "block.redstonepen.control_box.error.missing_closing_function_parenthesis": "Expected closing function parenthesis ')'",
  "block.redstonepen.control_box.error.missing_closing_parenthesis": "Expected closing parenthesis ')'",
  "block.redstonepen.control_box.error.missing_function_arguments": "Expected function arguments (including parentheses)",
  "block.redstonepen.control_box.error.symbol_readonly": "Symbol/variable is readonly",
  "block.redstonepen.control_box.error.unexpected_character": "Unexpected character",
  "block.redstonepen.control_box.error.unknown_function": "Unknown function",
  "block.redstonepen.control_box.help": "Simplified PLC-like controller.",
  "block.redstonepen.control_box.help.1": "§nBasics:§r§7 The RLC provides digital (ON/OFF) and analog\n§7(signal strength, comparator output) redstone I/O\n§7in all directions. Ports are the first letters of: Red,\n§7Blue, Yellow, Green, Up, and Down.\n§7You program it with a set of math expressions. All code \n§7lines are calculated in the same tick (read inputs ->\n§7calculate -> write outputs). The code is case insensitive\n§7(\"R\" is the same as \"r\"). You can also set own variables,\n§7their values will be retained until the RLC is stopped.\n§7Parse errors are marked (hover that) and prevent\n§7to start the program.\n\n§7Click the RUN/STOP button to start or stop a program.\n§7Hover the RLC symbol to see internal variable values\n§7(only when running). The port list shows the current\n§7signal values, and if a port is input, output, or unused.\n§7Copy/paste clipboard button, needless to say ;)",
  "block.redstonepen.control_box.help.10": "§nFurther:§r§7 The Control normally calculates every 4 ticks,\n§7when an input port changes form ON->OFF or OFF->ON,\n§7the run cycle is re-scheduled to the next possible tick.\n§7Assign the \"TICKRATE\" variable to alter the base tickrate\n§7between 2t and 20t.\n§7\n§7Comparator inputs do not trigger this scheduling.",
  "block.redstonepen.control_box.help.2": "§nExpressions§r§7 are stated like \"RESULT=TERM\" assignments,\n§7e.g. \"R = G & B\". Every code line must be like that.\n§7Use a \"#\" to mark the rest of a line as comment.\n§7The TERM can consist of parentheses \"(...)\", ports,\n§7variables, operators, and functions.\n\n§7If you assign to a port variable (R, B, Y, G, U, D), it is\n§7automatically set as output, and input signal changes\n§7are ignored there. If you use a port variable (that is\n§7not already output) in an expression, it is automatically\n§7set to input.\n§7Comparator-Outputs of adjacent blocks are read with\n§7the \".CO\" suffix. E.g. \"Y = MAX( B.CO, R, g.co, MyVar )\".\n§7CO's are never RLC outputs, even if you assign them.",
  "block.redstonepen.control_box.help.3": "§nArithmetic§r§7 is Integer arithmetic in the RLC, means\n§7\"A * 1.5\" is not accepted, and divisions are rounded\n§7toward zero. Supported operations are:\n\n§7  \"+\", \"-\", \"*\", \"/\", \"%\" (latter is modulo division).\n\n§7Variable assignments hold any positive or negative\n§732bit integer value (bigger than you need).\n§7Port values however are implicitly clamped to the\n§7valid redstone value range 0..15.\n§7Int32 wrap-over applies, division-by-zero yields\n§70 and a singularity to the Dungeon Dimensions.",
  "block.redstonepen.control_box.help.4": "§nRelational§r§7 operators provide numeric comparisons:\n§7\n§7  \"==\" (equal), \"!=\" (not equal),\n§7  \">=\" (greater-equal), \"<=\" (less-equal),\n§7  \">\" (greater-than), \"<\" (less-than).\n§7\n§7They evaluate to 0 if the comparison result is\n§7\"false\", and 15 if \"true\". As the values are numbers,\n§7you can directly calculate with them. E.g. \"G=(R>11)/3\"\n§7results in 5 or 0. However, better would be instead\n§7using the IF function: \"G = IF( R>11, 5, 0 )\".",
  "block.redstonepen.control_box.help.5": "§nLogical§r§7 operations work with \"Redstone Boolean\" values,\n§7which are integral numbers. Operands that are greater\n§7than 0 are considered \"true\". The operations yield 0 for\n§7\"false\" and 15 for \"true\". Supported are:\n§7\n§7 AND: \"AND\", \"&&\", \"&\"\n§7 OR: \"OR\", \"||\", \"|\"\n§7 XOR: \"XOR\", \"^\"\n§7 NOT: \"NOT\", \"!\"\n§7\n§7Rule of thumb: The OPs see inputs like a Redstone Lamp\n§7and yield outputs like a Lever. Coders: There are no\n§7bitwise operations.",
  "block.redstonepen.control_box.help.6": "§nEdge Detection§r§7 means tracking of inputs the moment they\n§7change from OFF [0] to ON [>0] and vice versa.\n§7Rising edge triggers are set up with the \".RE\" suffix, and\n§7are 15 for one tick when the input changes from OFF to ON.\n§7Falling edge triggers are set up with the \".FE\" suffix, and\n§7are 15 for one tick when the input changes from ON to OFF.\n§7E.g:\n§7\n§7 C = C+IF(R.RE OR G.FE OR Y.CO.RE, 1, 0) # Count C up\n§7 C = CNT1(G.RE, B.RE, 10) # Using up-down-counter1\n§7\n§7Notes: Although the RLC may not execute every tick, edges\n§7are still detected on input ports (\"interrupt\"). The PLC\n§7equivalents are called RTRIG and FTRIG.",
  "block.redstonepen.control_box.help.7": "§nTimers§r§7 in PLCs are signal based. The dominant three\n§7are implemented in the RLC: TON, TOF, and TP:\n§7TON is a Switch-On-Delay. The input signal must be steadily\n§7ON for a specified time, after which the timer output rises\n§7to ON. Any OFF-signal resets the timer immediately. TOF is\n§7the same inverted (Switch-Off-Delay). TP generates a pulse\n§7for a specified time when seeing a rising edge of the input\n§7signal. Any signal change during the pulse is ignored.\n§7The RLC has 5 (simplified) instances of each type:\n§7\n§7 A = TON3( INPUT_TERM, ON_DELAY_TICKS )\n§7 A = TOF2( INPUT_TERM, OFF_DELAY_TICKS )\n§7 A = TP4( INPUT_TERM, PULSE_TIME_TICKS )\n§7 R = TON1( Y.CO<3, 30*20 ) # Hopper low alarm after 30s\n§7 R = TP1( Y.RE, 20 ) # Observer pulse extension 1s",
  "block.redstonepen.control_box.help.8": "§nCounters§r§7 help keeping track of event occurrences. The RLC\n§7has five up-down counters CNT1..5 with optional input\n§7arguments:\n§7\n§7N = CNTx(Iup)   # Count up if Iup is >0\n§7N = CNTx(Iup, Idown)   # IDown>0: Count back to 0\n§7N = CNTx(Iup, Idown, Max)   # Count 0..Max\n§7N = CNTx(Iup, Idown, Min, Max)   # Count Min..Max\n§7N = CNTx(Iup, Idown, Min, Max, Reset)    # Reset to Min\n§7\n§7N holds the new counter value. Note: For event counting use\n§7signal edges (e.g. G.RE) as inputs. Counters are not guaranteed\n§7tick time accurate (use timers for timing).",
  "block.redstonepen.control_box.help.9": "§nFunction Reference§r\n§7IF(X,A,B)   # A if X>0 else B\n§7INV(X)   # Redstone invert: 15-X, result 0..15.\n§7MAX(A,B,...), MIN(...), MEAN(...)   # Min, max, average\n§7LIM(X), LIM(X,B), LIM(X,A,B)   # Limit 0..15, 0..B, A..B\n§7TIME(), CLOCK()    # Day time, game time\n§7RND()   # Random 0..15\n§7\n§7§nRLC specific function blocks§r\n§7\n§7TIVx(T) # Interval, pulse every T ticks (TIV1/TIV2)",
  "block.redstonepen.control_box.tooltips.copyall": "Copy code to clipboard",
  "block.redstonepen.control_box.tooltips.pasteall": "Paste code from clipboard",
  "block.redstonepen.control_box.tooltips.rcaplayer": "RCA connection to player %1$s",
  "block.redstonepen.control_box.tooltips.runstop": "RUN/STOP",
  "block.redstonepen.inverted_relay": "Inverted Redstone Relay",
  "block.redstonepen.inverted_relay.help": "Re-lays incoming signals from the back and the sides to the front with output power 15. The output is inverted (0 if there is an input signal, 15 if not). The switch-off delay is one redstone tick, switches on immediately.\nAlso accepts indirect input power from Tracks (connected to a block that propagates redstone signals).",
  "block.redstonepen.pulse_relay": "Pulse Redstone Relay",
  "block.redstonepen.pulse_relay.help": "Emits a short pulse at the output when detecting a rising signal edge (off-to-on-pulse controlled). The pulse is 1 redstone tick.",
  "block.redstonepen.relay": "Redstone Relay",
  "block.redstonepen.relay.help": "Re-lays incoming signals from the back and the sides to the front with output power 15. Switches on immediately, the switch-off delay is one redstone tick.\nAlso accepts indirect input power from Tracks (connected to a block that propagates redstone signals).",
  "block.redstonepen.track": "Redstone Track",
  "item.redstonepen.pen": "Redstone Pen",
  "item.redstonepen.pen.help": "Refillable pen used to draw or remove thin Redstone Tracks in all directions. These tracks do normally §lnot§r power the blocks they are placed on (click the center of a track to explicitly place/remove a connector). Sneak while looking at blocks to see what Redstone signal they currently have. Repair with Redstone in your crafting inventory.\nToo many tracks at unconnected faces in one block cause cross-talk and will not work, simply re-route then.",
  "item.redstonepen.pen.tooltip.numstored": "%1$s redstone stored",
  "item.redstonepen.pen.tooltip.rsfrominventory": "Uses redstone in your inventory",
  "item.redstonepen.quill": "Redstone Quill",
  "item.redstonepen.quill.help": "Used to draw or remove thin Redstone Tracks in all directions. These tracks do normally §lnot§r power the blocks they are placed on (click the center of a track to explicitly place/remove a connector). Sneak while looking at blocks to see what Redstone signal they currently have.\nToo many tracks at unconnected faces in one block cause cross-talk and will not work, simply re-route then.",
  "advancement.redstonepen.craft_redstonepen": "One pen to draw them all",
  "advancement.redstonepen.craft_redstonepen.desc": "Craft a Redstone Pen",
  "redstonepen.overlay.comparator_compare": " compare",
  "redstonepen.overlay.comparator_subtract": " subtract",
  "redstonepen.overlay.direct_power": "[%1$s]",
  "redstonepen.overlay.direct_power_at": "[%1$s] @ %2$s",
  "redstonepen.overlay.indirect_power": "(%1$s) @ %2$s",
  "redstonepen.overlay.repeater_delay": " %1$st",
  "redstonepen.overlay.track_power": "<%1$s>",
  "redstonepen.overlay.wire_power": "<%1$s>"
}