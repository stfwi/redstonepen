package wile.redstonepen.detail;

import net.minecraft.block.material.Material;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Item;
import net.minecraft.world.IBlockReader;
import net.minecraft.world.IWorldReader;
import net.minecraft.world.World;
import net.minecraft.block.Block;
import net.minecraft.block.BlockState;
import net.minecraft.util.*;
import net.minecraft.util.math.*;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import wile.redstonepen.libmc.blocks.StandardBlocks;
import wile.redstonepen.libmc.detail.Auxiliaries;

import javax.annotation.Nullable;
import java.util.ArrayList;
import java.util.Arrays;


@Mod.EventBusSubscriber(bus=Mod.EventBusSubscriber.Bus.MOD)
public class ModDevSupport
{
  @SubscribeEvent
  public static void onBlocksRegistry(final RegistryEvent.Register<Block> event) { TEST_BLOCKS.forEach(e->event.getRegistry().register(e)); }

  @SubscribeEvent
  public static void onItemRegistry(final RegistryEvent.Register<Item> event) { TEST_BLOCKS.forEach(e->event.getRegistry().register(new BlockItem(e,(new BlockItem.Properties())).setRegistryName(e.getRegistryName()))); }

  @SuppressWarnings("all")
  private static final ArrayList<Block> TEST_BLOCKS = new ArrayList<Block>(Arrays.asList(
    new TestBlock()
  ));

  public static class TestBlock extends StandardBlocks.BaseBlock
  {
    public TestBlock()
    {
      super(StandardBlocks.CFG_DEFAULT, Block.Properties.create(Material.MISCELLANEOUS).doesNotBlockMovement().zeroHardnessAndResistance());
      setRegistryName(new ResourceLocation(Auxiliaries.modid(), "testblock"));
    }

    @Override
    @SuppressWarnings("deprecation")
    public void neighborChanged(BlockState state, World world, BlockPos pos, Block block, BlockPos fromPos, boolean unused)
    { Auxiliaries.logWarn("POWERED=" + world.isBlockPowered(pos)); }

    @Override
    public boolean shouldCheckWeakPower(BlockState state, IWorldReader world, BlockPos pos, Direction side)
    { return false; }

    @Override
    public boolean canConnectRedstone(BlockState state, IBlockReader world, BlockPos pos, @Nullable Direction side)
    { return true; }
  }
}
