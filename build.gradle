// @file build.gradle
// Anthill Inside mod gradle build relay (mc1.17.1)
buildscript {
  repositories {
      maven { url = 'https://maven.minecraftforge.net' }
      mavenCentral()
  }
  dependencies {
      classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
  }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
java.toolchain.languageVersion = JavaLanguageVersion.of(16)
//sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
//-----------------------------------------------------------------------------
version = "${version_redstonepen}"
group = "wile.redstonepen"
archivesBaseName = "redstonepen-${version_minecraft}"

repositories {
  maven { name = "Progwml6 maven"; url = "https://dvs1.progwml6.com/files/maven/" } // JEI files
  maven { name = "ModMaven"; url = "modmaven.k-4u.nl" } // JEI files, fallback
  flatDir { dir 'libs' } // Mod jar dependencies in ./libs
}

minecraft {
  mappings channel: "official", version: "1.17.1"
  // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
  runs {
    client {
      workingDirectory project.file('run')
      property 'forge.logging.markers', '' // SCAN,REGISTRIES,REGISTRYDUMP
      property 'forge.logging.console.level', 'info'
      mods { redstonepen { source sourceSets.main } } }
    server {
      workingDirectory project.file('run')
      property 'forge.logging.markers', '' // SCAN,REGISTRIES,REGISTRYDUMP
      property 'forge.logging.console.level', 'info'
      mods { redstonepen { source sourceSets.main } }
    }
    data {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'
      args '--mod', 'redstonepen', '--all', '--output', file('src/generated/resources/')
      mods { redstonepen { source sourceSets.main } }
    }
  }
}

dependencies {
  minecraft "net.minecraftforge:forge:${version_forge_minecraft}"
  // compileOnly fg.deobf("mezz.jei:jei-${version_jei}:api")
  // runtimeOnly fg.deobf("mezz.jei:jei-${version_jei}")
}

processResources {
  outputs.upToDateWhen { false }
  doLast { file("${sourceSets.main.output.resourcesDir}/.gitversion-redstonepen").text = 'git log "-1" "--format=%h"'.execute().in.text.trim() }
}

jar {
  manifest {
    attributes([
      "Specification-Title": "redstonepen",
      "Specification-Vendor": "wilechaote",
      "Specification-Version": "1", // We are version 1 of ourselves
      "Implementation-Title": project.name,
      "Implementation-Version": "${version_redstonepen}",
      "Implementation-Vendor" :"wilechaote",
      "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}

sourceSets.main.resources { srcDir 'src/generated/resources' } // Include datagen resources

jar.finalizedBy('reobfJar')
//def reobfFile = file("$buildDir/reobfJar/output.jar")
//def reobfArtifact = artifacts.add('default', reobfFile) { type 'jar'; builtBy 'reobfJar' }


//import net.minecraftforge.gradle.common.task.SignJar
// task signJar(type: SignJar, dependsOn: jar) {
//   onlyIf { project.hasProperty("keystore_file") }
//   if(project.hasProperty("keystore_file")) {
//     keyStore = project.getProperty("keystore_file")
//     alias = project.getProperty("keystore_alias")
//     storePass = project.getProperty("keystore_pass")
//     keyPass = project.getProperty("keystore_keypass")
//     inputFile = jar.archivePath
//     outputFile = jar.archivePath
//   } else {
//     logger.warn("[WARNING] Signing skipped.")
//   }
// }
// build.dependsOn signJar

publishing {
  publications { mavenJava(MavenPublication) { artifact jar } }
  repositories { maven { url "file:///${project.projectDir}/mcmodsrepo" } }
}
